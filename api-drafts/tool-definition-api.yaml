---
swagger: '2.0'
info:
  description: Tool Definitions API
  version: "1.0.4"
  title: Tool Definitions API

paths:
  /tools/definitions/:
    get: 
      summary: Fetches all available tool definitions
      produces:  
        - application/json
      responses: 
        200:
          description: Search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/ToolDefinition'
    post:
      summary: Creates a ToolDefinition
      description: Creates a ToolDefinition
      consumes:
        - application/json
      produces:
       - application/json
      parameters:
      - in: body
        name: definition
        description: Tool definition item to add.
        schema:
          $ref: '#/definitions/ToolDefinition'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
          
definitions:
  ToolDefinition:
    type: object
    required:
      - name
      - description
      - type
      - file_relationships
      - parameters
    properties:
      name:
        type: string
        example: RNA-Seq single input
      description:
        type: string
        example: A workflow based on TopHat2 to quantify RNA-seq transcript levels as counts.
      type:
        type: string
        enum: 
          - Workflow
          - Visualization
        example: Workflow
      parameters:
        type: array
        items:
          $ref: '#/definitions/Parameter'
      file_relationships:
        $ref: '#/definitions/FileRelationship'
      output_files:
        type: array
        items:
          $ref: '#/definitions/OutputFile'
          
  # Note this is a Refinery Model Already
  FileType:
    type: object
    required: 
      - name
    properties:
      name: 
        type: string
        example: "fastq"
  
  FileRelationship:
    type: object
    required:
      - name
      - type
     
    properties:
      name:
        type: string
        example: "blabla"
      type:
        type: string
        enum:
          - pair
          - list
        example: "pair"
      input_files: # use this for the inner most elements of the data structure
        type: array
        items:
          $ref: '#/definitions/InputFile'
      nested_elements: # use this to nest structures (e.g. a pair within a list or two lists in a pair)
        type: array
        items: # for type "list" there has to be exactly 1 nested element, for type "pair" there have to be exactly 2 nested elements
          $ref: '#/definitions/FileRelationship'
    example: 
    # Note: many file relationships listed here just as an example
      - name: List of Paired Samples
        type: list
        input_files: []
        nested_elements:
          - name: ChIP vs Input Pair
            type: pair
            input_files:
              - name: ChIP file
                description: File with actual signal
                allowed_filetypes:
                  - bam
                  - fastq
              - name: Input file
                description: File with background signal
                allowed_filetypes:
                  - bam
                  - fastq
            nested_elements: []
            
      - name: Flat List example
        type: list
        input_files:
          - name: input File
            description: input file decription
            allowed_filetypes:
              - fastq
        nested_elements: []
      
      - name: List:list Example
        type: list
        input_files: []
        nested_elements:
          - name: List A
            type: list
            input_files:
              - name: inupt File list A
                description: inupt File list A description
                allowed_filetypes:
                  - fastq
                nested_elements: []
          - name: List B
            type: list
            input_files:
              - name: inupt File list B
                description: inupt File list B description
                allowed_filetypes:
                  - fastq
            nested_elements: []
            
  InputFile:
    type: object
    required: 
      - name
      - description
      - allowed_filetypes
    properties:
      name: 
        type: string
        example: "InputA"
      description:
        type: string
        example: InputA of pair1
      allowed_filetypes:
        type: array
        items:
         $ref: '#/definitions/FileType'
        example: ["fastq", "bed"]
         
  OutputFile:
    type: object
    required: 
      - name
      - description
      - file_type
    properties:
      name: 
        type: string
        example: "broadpeaks.bed"
      description:
        type: string
        example: Peaks called by MACS2.
      file_type:
        type: string
        example: "bed"
        
  Parameter:
    type: object
    required:
      - name
      - description
      - value_type
      - default_value # should be optional
      - galaxy_tool_id
      - galaxy_tool_parameter
    properties:
      name:
        type: string
        example: Genome Build
      description:
        type: string
        example: The genome build to use for this workflow. Has to be installed in Galaxy workflow engine.
      value_type:
        type: string
        enum: 
          - integer
          - string
          - boolean
          - float
          - genome_build # defined by instance: uses internal list of genome builds installed in the workflow engine
          - attribute #Should this be a list? defined by data set: allows any attribute field of the data set
          - file # selection of any file/node from a data set
        example: genome_build
      default_value:
        type: string
        example: hg19
      galaxy_tool_id:
        type: string
        example: TopHat2 # check if this is possible and a correct tool name
      galaxy_tool_parameter:
        type: string
        example: genome # check what the actual tool parameter name is and replace
        
host: virtserver.swaggerhub.com
basePath: /scottx611x/Tool_Definitions_API/1.0.4
schemes:
 - https
